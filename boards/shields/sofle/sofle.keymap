/*
 * Sofle Choc Wireless Modern2.0 — ZMK keymap
 * Board: nice_nano_v2
 * Shields: sofle_left / sofle_right
 *
 * Layer names (for readability; ZMK uses node labels below):
 */
#define BASE   0
#define LOWER  1
#define RAISE  2
#define ADJUST 3

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        BASE: default_layer {
            display-name = "Base";
            bindings = <
                // Row 1 — Left 6                                   Right 6
                &kp ESC    &kp N5   &kp MINUS &kp N3  &kp N4  &kp N6      &kp N8    &kp QUOT  &kp RA(N6) &kp N1    &kp RA(N3) &kp BSPC
                // Row 2
                &kp TAB    &kp A    &kp Z     &kp E   &kp R   &kp T       &kp Y     &kp U     &kp I      &kp O     &kp P      &kp ENTER
                // Row 3
                &kp LSHIFT &kp Q    &kp S     &kp D   &kp F   &kp G       &kp H     &kp J     &kp K      &kp L     &kp M      &kp ENTER
                // Row 4 — include encoder *press* between halves (left=MUTE, right=transparent)
                &kp LCTRL  &kp W    &kp X     &kp C   &kp V   &kp B       &kp MUTE  &trans    &kp N      &kp COMMA &kp DOT    &kp QMARK  &kp RSHIFT
                // Thumbs (5 left, 5 right)
                &kp LGUI   &kp LALT &kp LCTRL &mo RAISE &kp ENTER         &kp SPACE &mo LOWER &kp RCTRL  &kp LALT  &kp RGUI
            >;

            // Encoders rotation (left: volume, right: scroll)
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp UP DOWN>;
        };

        LOWER: lower_layer {
            display-name = "Symbols";
            bindings = <
                // Row 1
                &trans  &kp F1   &kp F2  &kp F3   &kp F4   &kp F5         &kp F6   &kp F7   &kp F8   &kp F9   &kp F10  &kp F11
                // Row 2
                &kp GRAVE &kp N1 &kp N2  &kp N3   &kp N4   &kp N5         &kp N6   &kp N7   &kp N8   &kp N9   &kp N0   &kp F12
                // Row 3
                &trans  &kp EXCL &kp AT  &kp HASH &kp DLLR &kp PRCNT      &kp CARET &kp AMPS &kp ASTRK &kp LEFT_PARENTHESIS &kp RIGHT_PARENTHESIS &kp PIPE
                // Row 4 — encoder presses between halves
                &trans  &kp EQUAL &kp MINUS &kp PLUS &kp LBRC &kp RBRC     &trans   &trans   &kp LEFT_BRACKET &kp RIGHT_BRACKET &kp SEMI &kp COLON &kp BSLH
                // Thumbs
                &trans &trans &trans &trans &trans                                 &trans &trans &trans &trans &trans
            >;

            sensor-bindings =
                <&inc_dec_kp LEFT_ARROW RIGHT_ARROW>,
                <&inc_dec_kp UP_ARROW DOWN_ARROW>;
        };

        RAISE: raise_layer {
            display-name = "Nav";
            bindings = <
                // Row 1
                &kp GRAVE &kp F1 &kp F2 &kp F3 &kp F4 &kp F5              &kp F6 &kp F7 &kp F8 &kp F9 &kp F10 &kp F11
                // Row 2
                &trans &kp HOME &kp PG_UP &kp PG_DN &kp END &kp INS        &kp LEFT &kp DOWN &kp UP &kp RIGHT &kp DEL &kp F12
                // Row 3
                &trans &kp LC(Z) &kp LC(X) &kp LC(C) &kp LC(V) &kp LC(Y)   &kp LC(A) &kp LC(S) &kp LC(F) &kp LC(T) &kp LC(P) &kp LC(Q)
                // Row 4 — encoder presses between halves
                &trans &trans &trans &trans &trans &trans                  &trans &trans &trans &trans &trans &trans &trans
                // Thumbs
                &trans &trans &trans &trans &trans                         &trans &trans &trans &trans &trans
            >;
        };

        ADJUST: adjust_layer {
            display-name = "System";
            bindings = <
                // Row 1
                &bt BT_CLR_ALL &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4    &none &none &none &none &none &none
                // Row 2
                &ext_power EP_TOG &none &none &none &none &none                                           &none &none &none &none &none &none
                // Row 3
                &none &none &none &none &none &none                                                        &none &none &none &none &none &none
                // Row 4 — encoder presses between halves
                &none &none &none &none &none &none                                                        &caps_word &none &none &none &none &none &none
                // Thumbs
                &none &none &none &none &none                                                             &none &none &none &none &none
            >;
        };
    };
};

/* Encoder rotation behaviors */
 / {
  behaviors {
    inc_dec_kp: inc_dec_kp {
      compatible = "zmk,behavior-sensor-rotate-key-press";
      #binding-cells = <2>;
      bindings = <&kp>, <&kp>;
    };
  };
};
