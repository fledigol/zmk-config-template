\
/*
 * Sofle Choc Wireless Modern2.0 — ZMK keymap (Windows FR/AZERTY)
 * Board: nice_nano_v2
 * Shields: sofle_left / sofle_right
 *
 * Layers (labels are targets for &mo LOWER/RAISE/...):
 */
#define BASE   0
#define LOWER  1
#define RAISE  2
#define ADJUST 3

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        // ================= L0 / BASE =================
        BASE: default_layer {
            display-name = "L0 Base (FR/AZERTY)";
            // Légende FR: N1..N0 = rangée supérieure FR (& é " ' ( - è _ ç à)
            // LS(...) = avec Shift ; RA(...) = AltGr
            bindings = <
                // Row 1 (Left 6)                                        // Row 1 (Right 6)
                &kp ESC   &kp N5    &kp MINUS &kp N3   &kp N4   &kp N6     &kp N8     &kp QUOT   &kp RA(N6)   &kp N1     &kp RA(N3)  &kp BSPC
                // Row 2
                &kp TAB   &kp A     &kp Z     &kp E    &kp R    &kp T      &kp Y      &kp U      &kp I        &kp O      &kp P       &kp ENTER
                // Row 3
                &kp LSHIFT &kp Q    &kp S     &kp D    &kp F    &kp G      &kp H      &kp J      &kp K        &kp L      &kp M       &kp ENTER
                // Row 4 (inclure les press des encodeurs au milieu pour garder l’indexation)
                &kp LCTRL &kp W     &kp X     &kp C    &kp V    &kp B      &kp MUTE   &trans     &kp N        &kp COMMA  &kp DOT     &kp QMARK
                // Thumbs (5 left, 5 right)
                &kp LGUI  &kp LALT  &kp SPACE &mo RAISE &mo ADJUST        &kp SPACE   &mo LOWER  &kp LEFT     &kp DOWN   &kp RIGHT
            >;

            // Encoders (rotation) : gauche = volume, droite = scroll
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp UP DOWN>;
        };

        // ================= L1 / LOWER =================
        LOWER: lower_layer {
            display-name = "L1 Chiffres + symboles (FR-safe)";
            bindings = <
                // Row 1
                &trans   &trans   &trans    &trans    &trans    &trans      &kp N5      &kp MINUS   &kp LS(N5)  &kp RA(E)   &kp RA(N4)   &kp BSPC    // (  -  %  €  $
                // Row 2
                &kp TAB  &kp N0   &trans    &kp N7    &trans    &trans      &kp N7      &kp N8      &kp N9      &kp LT      &kp GT       &kp ENTER
                // Row 3
                &kp LSHIFT &trans &trans    &trans    &trans    &trans      &kp N4      &kp N5      &kp N6      &kp LS(EQUAL) &kp N6     &kp ENTER     // 4 5 6 + -
                // Row 4
                &kp LCTRL &trans  &trans    &kp N9    &trans    &trans      &kp N1      &kp N2      &kp N3      &kp DOT     &kp SLASH    &kp RA(EQUAL) // 1 2 3 . / \
                // Thumbs
                &kp LGUI  &kp LALT &kp SPACE &mo RAISE &mo ADJUST          &kp SPACE   &mo LOWER   &kp N0      &kp DOT     &kp EQUAL
            >;
        };

        // ================= L2 / RAISE =================
        RAISE: raise_layer {
            display-name = "L2 Nav / AltGr / ponctuation";
            bindings = <
                // Row 1
                &kp GRAVE  &kp RA(N4)  &kp RA(EQUAL)  &kp LBRC  &kp RA(N5)   &kp RA(MINUS)   &trans  &trans  &trans  &trans     &trans      &kp BSPC   // ² { } ^ [ ]
                // Row 2
                &kp TAB    &kp RA(N0)  &trans         &kp N2    &trans       &trans          &trans  &trans  &trans  &kp RA(RBRC) &trans    &kp ENTER  // @ é … … ) …
                // Row 3
                &kp LSHIFT &trans      &trans         &kp UP    &trans       &trans          &trans  &trans  &trans  &trans       &trans    &kp ENTER
                // Row 4
                &kp LCTRL  &kp LEFT    &kp DOWN       &kp RIGHT &trans       &trans          &kp RA(N2) &kp SEMI &kp COLON &kp EXCL  &trans  &trans     // ~ ; : !
                // Thumbs
                &kp LGUI  &kp LALT  &kp SPACE &mo RAISE &mo ADJUST          &kp SPACE  &mo LOWER  &trans &trans &trans
            >;
        };

        // ================= L3 / ADJUST =================
        ADJUST: adjust_layer {
            display-name = "L3 Utilitaires";
            bindings = <
                // Row 1
                &kp ESC  &trans &trans &trans &trans &trans        &trans &trans &trans &trans &trans &kp BSPC
                // Row 2
                &kp TAB  &trans &trans &kp RA(E) &trans &trans      &trans &trans &trans &trans &trans &kp ENTER    // é = AltGr+E
                // Row 3
                &kp LSHIFT &trans &trans &trans &trans &trans       &trans &trans &trans &trans &trans &kp ENTER
                // Row 4
                &kp LCTRL  &trans &trans &trans &trans &trans       &trans &trans &trans &trans &trans &trans
                // Thumbs
                &kp LGUI  &kp LALT &kp SPACE &mo RAISE &mo ADJUST   &kp SPACE &mo LOWER &trans &trans &trans
            >;
        };
    };
};

/* Behaviors for encoder rotation */
 / {
  behaviors {
    inc_dec_kp: inc_dec_kp {
      compatible = "zmk,behavior-sensor-rotate-key-press";
      #binding-cells = <2>;
      bindings = <&kp>, <&kp>;
    };
  };
};
